{
  "compilerOptions": {
    // checkJs : @ts-check와 같은 효과를 내는 옵션
    // js 파일을 ts파일로 인식해서 적용하겠다
    "allowJs": true,
    // tsc ts파일을 js(어떤버전)로 바꾸는것
    "target": "ES5",
    // ts결과물이 어디로 들어갈건가?
    "outDir": "./dist",
    // Promise를 인식시켜줌
    "moduleResolution": "Node",
    // ES2015 : async와같은 JS 최근 문법을 쓰기위해 추가
    // DOM, DOM.Iterable : 소스코드 내에서 돔을 조절할것이기 때문에 추가함
    "lib": ["ES2015", "DOM", "DOM.Iterable"],
    // 타입을 정하기 어려운 곳이 있으면 명시적으로 any를 선언해야됨
    "noImplicitAny": true,
    "esModuleInterop": true,
    // typeRoots는 따로 설정해주지 않으면 "./node_modules/@types" 이게 기본 경로(@types 안의 폴더를 다 뒤져서 index.d.ts파일을 읽음),거기에 types라고 내가 정의한 폴더를 추가해서 라이브러리 이름으로 폴더를 만든 뒤 'index.d.ts'파일을 만들어서 설정해줌
    "typeRoots": ["./node_modules/@types", "./types"],
    // 엄격한 type으로 정의하기위해
    "strict":true,
  },
  // 프로젝트 기준으로 어떤 파일을 ts로 변환할거냐? src폴더 안의 app.js를 바꿈 src폴더안의 모든 파일을 대상으로 하겠다는 뜻
  "include": ["./src/**/*"]
}